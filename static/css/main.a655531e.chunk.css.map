{"version":3,"sources":["App.css","parse-soql.css","navbar.css","sample-queries.css","index.css"],"names":[],"mappings":"AAAA,KAIE,cACF,CAuBA,+BACE,QACF,CAEA,eAEE,aACF,CAMA,0BACE,UACF,CAGA,UACE,SACF,CAEA,iBACE,WACF,CAEA,qBACE,YAAa,CACb,iBACF,CAEA,iBACE,2BAA4B,CAC5B,eACF,CAEA,iCACE,YAAa,CACb,YACF,CAEA,uCACE,eACF,CAMC,KACC,gBAAiB,CAWjB,YAAa,CACb,qBAXF,CAkBA,WACE,YAAa,CACb,kBACF,CAUA,eACE,QAAS,CACT,cAAe,CACf,WAAY,CACZ,aAAc,CACd,eACF,CAKA,0BAEE,UACF,CCxHA,wBACE,eACF,CCNA,QACE,WAAY,CACZ,YAAa,CACb,kBAAmB,CACnB,cAAiB,CACjB,UAAY,CACZ,wBAAyB,CACzB,6BACF,CAEA,eACE,iBACF,CCZA,YACE,cAAe,CAGf,6CACF,CCLA,KACE,QAAS,CACT,SAAU,CACV,sBACF,CAEA,aACE,iBAAkB,CAClB,gBACF","file":"main.a655531e.chunk.css","sourcesContent":["body {\n  margin: 0;\n  padding: 0;\n  font-family: sans-serif;\n  font-size: 16px;\n}\n\n/** Main Layout rules */\n.App {\n  min-height: 100vh; \n}\n\n.App {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n\n.App .body {\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n}\n\n.body .sidebar {\n  order: -1;\n}\n\n.body .content {\n  flex: 1;\n}\n\n.body .sidebar {\n  max-width: 12em;\n  flex: 0 0 12em;\n}\n\n.App .header {\n  height: 4em;\n}\n\n.App .footer {\n  height: 4em;\n}\n\n/** Text */\n.text-red {\n  color: red;\n}\n\n.body .container {\n  padding: 1em;\n}\n\n.body .ms-Breadcrumb {\n  margin-top: 0;\n  margin-bottom: 1em;\n}\n\n.body .selection {\n  height: calc(100vh - 16.5em);\n  overflow-x: auto;\n}\n\n.body .selection .selection-item {\n  display: flex;\n  padding: 0.5em;\n}\n\n.body .selection .selection-item .name {\n  margin-left: 1em;\n}\n\n/* \nSet the main wrapper component to \ntake up the entire height of the page\n */\n .App {\n  min-height: 100vh; \n}\n/*\nTo use Flexbox we need to set the display\nsetting of the container component to flex.\nThe we set the direction of the wrapped \ncomponents. By default flexbox will order \nthem by row, but we can also tell it to do\nit by column.\n*/\n.App {\n  display: flex;\n  flex-direction: column;\n}\n/*\nSomething similar is done to the body \nelement, except we order the wrapped \ncomponent as rows.\n*/\n.App .body {\n  display: flex;\n  flex-direction: row;\n}\n/*\nFlexbox let's us reorder the way the \nelements are placed inside the wrapper\ncomponent. Using the order rule, we move\nthe sidebar to the left of the content \ncomponent. We also set its width to 12em\nand set its flex propertires so it doesn't\ngrow or shrink with the rest of the page.\n*/\n.body .sidebar {\n  order: -1;\n  max-width: 12em;\n  flex-grow: 0;    /* Defined the ability to groe */\n  flex-shrink: 0;  /* Defines the ability to shrink */\n  flex-basis: 12em;/* Default value of the element before distribuing the remaing space */\n}\n/*\nLastly we give some custom height to our \nheader and footer components.\n*/\n.App .header,\n.App .footer {\n  height: 4em;\n}",".parse-row {\n  margin-top: 10px;\n}\n\n.ms-Grid-row {\n  margin-top: 10px;\n}",".NavBar {\n  height: 100%;\n  display: flex;\n  align-items: center;\n  padding: 0 0.5em ;\n  color: white;\n  background-color: #141127;\n  justify-content: space-between;\n}\n\n.NavBar .logos {\n  margin-right: 10px;\n}",".query-cell {\n  cursor: pointer;\n  border-bottom-style: solid;\n  border-bottom-color: #d3d3d36b;\n  border-bottom-width: thin;\n}\n","body {\n  margin: 0;\n  padding: 0;\n  font-family: sans-serif;\n}\n\n.queries-col {\n  overflow-y: scroll;\n  max-height: 825px;\n}"]}